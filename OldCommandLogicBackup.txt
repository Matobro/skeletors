func issue_attack_move_command(pos: Vector2, queue: bool, player_id: int) -> void:
	if owner_id != player_id: return
	
	attack_move_target = pos
	is_attack_moving = true
	command_queue.clear()
	movement_target = null
	for rally_point in rally_points:
		rally_point.queue_free()
	rally_points.clear()
	
	create_command_visual(pos, commands.move_command, true)
	
	state_machine.set_state(state_machine.states.attack_moving)
	
	----
	
	func issue_move_command(pos: Vector2, queue, player_id) -> void:
	if owner_id != player_id: return
	if queue: #if holding shift
		command_queue.append(pos)
		add_rally_point(pos, true)
	else:
		command_queue.clear()
		movement_target = null
		for rally_point in rally_points:
			rally_point.queue_free()
		rally_points.clear()
		command_queue.append(pos)
		add_rally_point(pos, false)
